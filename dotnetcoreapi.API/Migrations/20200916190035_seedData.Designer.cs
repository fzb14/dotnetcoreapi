// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnetcoreapi.API.Contexts;

namespace dotnetcoreapi.API.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20200916190035_seedData")]
    partial class seedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dotnetcoreapi.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "largest city in the world",
                            Name = "new york"
                        },
                        new
                        {
                            Id = 2,
                            Description = "capital city in China",
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "biggest city in Japan",
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 4,
                            Description = "famous city in China",
                            Name = "Shanghai"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Capital city of Fujian Province",
                            Name = "Fuzhou"
                        });
                });

            modelBuilder.Entity("dotnetcoreapi.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("pointOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "beautiful",
                            Name = "Central Park"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "see sea",
                            Name = "Long Irland"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "long long wall",
                            Name = "Great Wall"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "large old palace",
                            Name = "Forbidden City"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "many mamy people",
                            Name = "Crowded Street"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Description = "Yummy freash sushi",
                            Name = "Sushi Bar"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 4,
                            Description = "A tall radio and tv tower",
                            Name = "Oriental Peal Tower"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 4,
                            Description = "European style buildings",
                            Name = "The Bund"
                        });
                });

            modelBuilder.Entity("dotnetcoreapi.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("dotnetcoreapi.API.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
